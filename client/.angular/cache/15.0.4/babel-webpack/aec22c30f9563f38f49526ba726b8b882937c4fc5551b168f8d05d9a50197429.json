{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction TransactionComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const t_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r1.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r1.amount);\n  }\n}\nexport class TransactionComponent {\n  constructor(ds) {\n    this.ds = ds;\n    this.acno = JSON.parse(localStorage.getItem('currentAcno') || \"\");\n    this.ds.getTransaction(this.acno).subscribe(result => {\n      this.transactions = result.transaction;\n    }, result => {\n      alert(result.error.message);\n    });\n  }\n}\nTransactionComponent.ɵfac = function TransactionComponent_Factory(t) {\n  return new (t || TransactionComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionComponent,\n  selectors: [[\"app-transaction\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[\"id\", \"cont1\", 1, \"container-1\", \"p-5\"], [1, \"container\", \"bg-white\", \"pt-3\", 2, \"min-height\", \"600px\", \"box-shadow\", \"rgba(0, 0, 0, 0.35) 0px 5px 15px\"], [\"href\", \"\"], [1, \"row\", \"border\", \"w-75\", \"mx-auto\", \"text-center\", \"rounded\", \"text-dark\", \"my-2\"], [1, \"col\", \"p-2\"], [1, \"row\", \"w-75\", \"mx-auto\", \"text-center\", \"text-muted\", \"my-2\"], [1, \"col\", \"border\", \"mx-2\", \"rounded\", \"p-2\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/dashboard\"]],\n  template: function TransactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Transaction History\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"a\", 2);\n      i0.ɵɵtext(5, \"Back To Home\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4);\n      i0.ɵɵtext(8, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4);\n      i0.ɵɵtext(10, \"Amount\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"div\", 6);\n      i0.ɵɵtext(13, \"Debit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 6);\n      i0.ɵɵtext(15, \"\\u20B9 1500\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(16, \"h1\");\n      i0.ɵɵtext(17, \"Transaction History\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"table\")(19, \"thead\")(20, \"tr\")(21, \"th\");\n      i0.ɵɵtext(22, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Amount\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"tbody\");\n      i0.ɵɵtemplate(26, TransactionComponent_tr_26_Template, 5, 2, \"tr\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"a\", 8);\n      i0.ɵɵtext(28, \"Back to Home\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"ngForOf\", ctx.transactions);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\"h1[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n    color: #2B3467;\\r\\n    margin: 20px 0;\\r\\n}\\r\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{\\r\\n    border: black 1px solid;\\r\\n    border-collapse: collapse;\\r\\n    background-color: #2B3467 ;\\r\\n    color: white;\\r\\n    padding: 15px 50px;\\r\\n    margin: auto;\\r\\n}\\r\\na[_ngcontent-%COMP%]{\\r\\n    display: block;\\r\\n    text-align: center;\\r\\n    margin: 10px 0;\\r\\n    color: #2B3467;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdHJhbnNhY3Rpb24vdHJhbnNhY3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztBQUNsQjtBQUNBO0lBQ0ksdUJBQXVCO0lBQ3ZCLHlCQUF5QjtJQUN6QiwwQkFBMEI7SUFDMUIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzJCMzQ2NztcclxuICAgIG1hcmdpbjogMjBweCAwO1xyXG59XHJcbnRhYmxlLHRoLHRke1xyXG4gICAgYm9yZGVyOiBibGFjayAxcHggc29saWQ7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJCMzQ2NyA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDUwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbn1cclxuYXtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAxMHB4IDA7XHJcbiAgICBjb2xvcjogIzJCMzQ2NztcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAiCQA,0BAAmC;IAC3BA,YAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,YAAY;IAAAA,iBAAK;;;;IADjBA,eAAU;IAAVA,+BAAU;IACVA,eAAY;IAAZA,iCAAY;;;AC3B5B,OAAM,MAAOC,oBAAoB;EAK/BC,YAAoBC,EAAc;IAAd,OAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,CAAE;IAClE,IAAI,CAACL,EAAE,CAACM,cAAc,CAAC,IAAI,CAACL,IAAI,CAAC,CAACM,SAAS,CACxCC,MAAU,IAAI;MACb,IAAI,CAACC,YAAY,GAAGD,MAAM,CAACE,WAAW;IACxC,CAAC,EACAF,MAAM,IAAI;MACTG,KAAK,CAACH,MAAM,CAACI,KAAK,CAACC,OAAO,CAAC;IAC7B,CAAC,CACF;EACH;;AAfWf,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDNjCrB,8BAAwC;MAE9BA,mCAAmB;MAAAA,iBAAK;MAC5BA,4BAAW;MAAAA,4BAAY;MAAAA,iBAAI;MAC3BA,8BAAwE;MAC/CA,oBAAI;MAAAA,iBAAM;MAC/BA,8BAAqB;MAAAA,uBAAM;MAAAA,iBAAM;MAErCA,+BAA2D;MACdA,sBAAK;MAAAA,iBAAM;MACpDA,+BAAyC;MAAAA,4BAAM;MAAAA,iBAAM;MAY/DA,2BAAI;MAAAA,oCAAmB;MAAAA,iBAAK;MAC5BA,8BAAO;MAGSA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGvBA,8BAAO;MACHA,qEAGK;MACTA,iBAAQ;MAEZA,6BAA2B;MAAAA,6BAAY;MAAAA,iBAAI;;;MANjBA,gBAAe;MAAfA,0CAAe","names":["i0","TransactionComponent","constructor","ds","acno","JSON","parse","localStorage","getItem","getTransaction","subscribe","result","transactions","transaction","alert","error","message","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/run/media/sahil/Partition_1/code/Angular/BANK/bankApp/src/app/transaction/transaction.component.html","/run/media/sahil/Partition_1/code/Angular/BANK/bankApp/src/app/transaction/transaction.component.ts"],"sourcesContent":["<!-- new transactions -->\r\n    \r\n<div class=\"container-1 p-5\" id=\"cont1\">\r\n    <div class=\"container bg-white pt-3\" style=\"min-height:600px ;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\">\r\n      <h1>Transaction History</h1>\r\n      <a href=\"\">Back To Home</a>\r\n      <div class=\"row border w-75 mx-auto text-center rounded text-dark my-2\">\r\n          <div class=\"col p-2\">Type</div>\r\n          <div class=\"col p-2\">Amount</div>\r\n      </div>\r\n      <div class=\"row  w-75 mx-auto text-center text-muted my-2\">\r\n          <div class=\"col border mx-2 rounded p-2\">Debit</div>\r\n          <div class=\"col border mx-2 rounded p-2\">₹ 1500</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- old transactions -->\r\n<h1>Transaction History</h1>\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let t of transactions\">\r\n            <td>{{t.type}}</td>\r\n            <td>{{t.amount}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<a routerLink=\"/dashboard\">Back to Home</a>\r\n","import { Component } from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-transaction',\r\n  templateUrl: './transaction.component.html',\r\n  styleUrls: ['./transaction.component.css']\r\n})\r\nexport class TransactionComponent {\r\n\r\n  acno:any;\r\n  transactions:any;\r\n  \r\n  constructor(private ds:DataService){\r\n    this.acno = JSON.parse(localStorage.getItem('currentAcno') || \"\" );\r\n    this.ds.getTransaction(this.acno).subscribe(\r\n      (result:any) => {\r\n        this.transactions = result.transaction;\r\n      },\r\n      (result) => {\r\n        alert(result.error.message)\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}