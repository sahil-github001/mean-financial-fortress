{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet DashboardComponent = class DashboardComponent {\n  constructor(ds, fb, router) {\n    this.ds = ds;\n    this.fb = fb;\n    this.router = router;\n    this.displayAboutUs = 'none';\n    this.depositForm = this.fb.group({\n      acno: ['', [Validators.required, Validators.pattern('[0-9]*')]],\n      pswd: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9]*')]],\n      dAmt: ['', [Validators.required, Validators.pattern('[0-9]*')]]\n    });\n    this.withdrawForm = this.fb.group({\n      acno1: ['', [Validators.required, Validators.pattern('[0-9]*')]],\n      pswd1: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9]*')]],\n      wAmt: ['', [Validators.required, Validators.pattern('[0-9]*')]]\n    });\n    if (localStorage.getItem('currentUser')) {\n      this.sDate = Date();\n      this.user = JSON.parse(localStorage.getItem('currentUser') || \"\");\n    }\n  }\n  ngOnInit() {\n    // if (!localStorage.getItem('currentAcno')) {/////////\n    //   alert('please login first');////////\n    //   this.router.navigateByUrl('');///////\n    // }\n    this.getBalance();\n  }\n  deposit() {\n    const acno = this.depositForm.value.acno;\n    const pswd = this.depositForm.value.pswd;\n    const dAmt = this.depositForm.value.dAmt;\n    const currentAcno = JSON.parse(localStorage.getItem('currentAcno') || \"\");\n    if (this.depositForm.valid) {\n      if (currentAcno == acno) {\n        this.ds.deposit(acno, pswd, dAmt).subscribe(result => {\n          alert(result.message);\n          this.depositForm.reset();\n          this.ngOnInit();\n        }, result => {\n          alert(result.error.message);\n        });\n      } else {\n        alert('invalid user details');\n      }\n    }\n  }\n  withdraw() {\n    const acno1 = this.withdrawForm.value.acno1;\n    const pswd1 = this.withdrawForm.value.pswd1;\n    const wAmt = this.withdrawForm.value.wAmt;\n    const currentAcno = JSON.parse(localStorage.getItem('currentAcno') || \"\");\n    if (this.withdrawForm.valid) {\n      if (acno1 == currentAcno) {\n        const result = this.ds.withdraw(acno1, pswd1, wAmt).subscribe(result => {\n          alert(result.message);\n          this.withdrawForm.reset();\n          this.ngOnInit();\n        }, result => {\n          alert(result.error.message);\n        });\n      } else {\n        alert('invalid user details');\n      }\n    }\n  }\n  logout() {\n    localStorage.removeItem('currentAcno');\n    localStorage.removeItem('currentUser');\n    this.router.navigateByUrl('');\n  }\n  delete() {\n    this.acno = JSON.parse(localStorage.getItem('currentAcno') || '');\n  }\n  onCancel() {\n    this.acno = \"\";\n  }\n  onDelete(acno) {\n    this.ds.deleteAcc(acno).subscribe(result => {\n      alert(result.message);\n      localStorage.removeItem('currentAcno');\n      localStorage.removeItem('currentUser');\n      this.router.navigateByUrl('');\n    }, result => {\n      alert(result.error.message);\n    });\n  }\n  getBalance() {\n    const acno = JSON.parse(localStorage.getItem('currentAcno') || \"\");\n    this.ds.getBalance(acno).subscribe(result => {\n      this.balance = result.balance;\n    }, result => {\n      alert(result.error.message);\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","DashboardComponent","constructor","ds","fb","router","group","acno","required","pattern","pswd","dAmt","acno1","pswd1","wAmt","localStorage","getItem","sDate","Date","user","JSON","parse","ngOnInit","getBalance","deposit","depositForm","value","currentAcno","valid","subscribe","result","alert","message","reset","error","withdraw","withdrawForm","logout","removeItem","navigateByUrl","delete","onCancel","onDelete","deleteAcc","balance","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/run/media/sahil/Partition_1/code/Angular/BANK/bankApp/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  acno: any;\r\n  pswd: any;\r\n  dAmt: any;\r\n  acno1: any;\r\n  pswd1: any;\r\n  wAmt: any;\r\n  user: any; // To hold current username\r\n  sDate: any;\r\n\r\n  balance:any;\r\n  displayAboutUs = 'none';\r\n  \r\n  constructor(private ds: DataService, private fb: FormBuilder, private router: Router) {\r\n    if (localStorage.getItem('currentUser')) {\r\n      this.sDate = Date();\r\n      this.user = JSON.parse(localStorage.getItem('currentUser') || \"\");\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    // if (!localStorage.getItem('currentAcno')) {/////////\r\n    //   alert('please login first');////////\r\n    //   this.router.navigateByUrl('');///////\r\n    // }\r\n    this.getBalance()\r\n  }\r\n\r\n  depositForm = this.fb.group({\r\n    acno: ['', [Validators.required, Validators.pattern('[0-9]*')]],\r\n    pswd: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9]*')]],\r\n    dAmt: ['', [Validators.required, Validators.pattern('[0-9]*')]]\r\n  })\r\n  deposit() {\r\n    const acno = this.depositForm.value.acno;\r\n    const pswd = this.depositForm.value.pswd;\r\n    const dAmt = this.depositForm.value.dAmt;\r\n    const currentAcno = JSON.parse(localStorage.getItem('currentAcno') || \"\")\r\n    if (this.depositForm.valid) {\r\n      if (currentAcno == acno) {\r\n        this.ds.deposit(acno, pswd, dAmt).subscribe(\r\n          (result: any) => {\r\n            alert(result.message);\r\n            this.depositForm.reset();\r\n            this.ngOnInit()\r\n          },\r\n          (result: any) => {\r\n            alert(result.error.message);\r\n          })\r\n      } else {\r\n        alert('invalid user details')\r\n      }\r\n    }\r\n  }\r\n\r\n  withdrawForm = this.fb.group({\r\n    acno1: ['', [Validators.required, Validators.pattern('[0-9]*')]],\r\n    pswd1: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9]*')]],\r\n    wAmt: ['', [Validators.required, Validators.pattern('[0-9]*')]]\r\n  })\r\n  withdraw() {\r\n    const acno1 = this.withdrawForm.value.acno1;\r\n    const pswd1 = this.withdrawForm.value.pswd1;\r\n    const wAmt = this.withdrawForm.value.wAmt;\r\n    const currentAcno = JSON.parse(localStorage.getItem('currentAcno') || \"\")\r\n\r\n    if (this.withdrawForm.valid) {\r\n      if (acno1 == currentAcno) {\r\n        const result = this.ds.withdraw(acno1, pswd1, wAmt).subscribe(\r\n          (result: any) => {\r\n            alert(result.message);\r\n            this.withdrawForm.reset();\r\n            this.ngOnInit()\r\n          },\r\n          (result: any) => {\r\n            alert(result.error.message);\r\n          }\r\n        )\r\n      } else {\r\n        alert('invalid user details');\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('currentAcno');\r\n    localStorage.removeItem('currentUser');\r\n    this.router.navigateByUrl('');\r\n  }\r\n\r\n  delete() {\r\n    this.acno = JSON.parse(localStorage.getItem('currentAcno') || '');\r\n  }\r\n\r\n  onCancel() {\r\n    this.acno = \"\";\r\n  }\r\n\r\n  onDelete(acno: any) {\r\n    this.ds.deleteAcc(acno).subscribe(\r\n      (result: any) => {\r\n        alert(result.message);\r\n\r\n        localStorage.removeItem('currentAcno');\r\n        localStorage.removeItem('currentUser');\r\n\r\n        this.router.navigateByUrl('');\r\n      },\r\n      (result) => {\r\n        alert(result.error.message);\r\n      }\r\n    )\r\n  }\r\n\r\n  getBalance(){\r\n    const acno:any = JSON.parse(localStorage.getItem('currentAcno') || \"\")\r\n    this.ds.getBalance(acno).subscribe(\r\n      (result:any) => {\r\n        this.balance = result.balance\r\n      },\r\n      (result:any) => {\r\n        alert(result.error.message)\r\n      }\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}