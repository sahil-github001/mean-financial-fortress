{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  // class is collection of properties and methods\n  constructor(router, ds, fb) {\n    this.router = router;\n    this.ds = ds;\n    this.fb = fb;\n    // Properties\n    this.aim = 'Your perfect banking partner'; // string interpolation (component to view)\n    this.account = 'Enter your account number'; // Property binding - [attributes_name] = 'property'\n    //model for login\n    this.loginForm = this.fb.group({\n      acno: ['', [Validators.required, Validators.pattern('[0-9]*')]],\n      pswd: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9]*')]]\n    });\n    // used for object initialization\n    // It automatically invokes when an object is created.\n  }\n\n  ngOnInit() {\n    // Initial process of a component\n    // when a component is created at same time it initialize or authorize\n    // when a component is created there is a lifecycle for it.\n  }\n  // Userdefined functions // 4th executed\n  login() {\n    const acno = this.loginForm.value.acno;\n    const pswd = this.loginForm.value.pswd;\n    if (this.loginForm.valid) {\n      this.ds.login(acno, pswd).subscribe(result => {\n        localStorage.setItem('Token', JSON.stringify(result.token));\n        localStorage.setItem('currentUser', JSON.stringify(result.currentUser));\n        localStorage.setItem('currentAcno', JSON.stringify(result.currentAcno));\n        alert(result.message);\n        this.router.navigateByUrl('dashboard');\n      }, result => {\n        alert(result.error.message);\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAsBC,UAAU,QAAQ,gBAAgB;AASjD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAC3B;EAEEC,YAAoBC,MAAa,EAAUC,EAAc,EAAUC,EAAc;IAA7D,WAAM,GAANF,MAAM;IAAiB,OAAE,GAAFC,EAAE;IAAsB,OAAE,GAAFC,EAAE;IAWrE;IAEA,QAAG,GAAG,8BAA8B,CAAC,CAAC;IACtC,YAAO,GAAG,2BAA2B,CAAC,CAAE;IAMxC;IACA,cAAS,GAAG,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC;MACxBC,IAAI,EAAC,CAAC,EAAE,EAAC,CAACP,UAAU,CAACQ,QAAQ,EAACR,UAAU,CAACS,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC5DC,IAAI,EAAC,CAAC,EAAE,EAAC,CAACV,UAAU,CAACQ,QAAQ,EAACR,UAAU,CAACS,OAAO,CAAC,cAAc,CAAC,CAAC;KAClE,CAAC;IAvBA;IACA;EACD;;EAEDE,QAAQ;IACN;IACA;IACA;EAAA;EAkBF;EAEEC,KAAK;IACL,MAAML,IAAI,GAAG,IAAI,CAACM,SAAS,CAACC,KAAK,CAACP,IAAI;IACtC,MAAMG,IAAI,GAAG,IAAI,CAACG,SAAS,CAACC,KAAK,CAACJ,IAAI;IACtC,IAAG,IAAI,CAACG,SAAS,CAACE,KAAK,EAAC;MACtB,IAAI,CAACX,EAAE,CAACQ,KAAK,CAACL,IAAI,EAAEG,IAAI,CAAC,CAACM,SAAS,CAChCC,MAAU,IAAI;QACbC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACK,KAAK,CAAC,CAAC;QAC3DJ,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACM,WAAW,CAAC,CAAC;QACvEL,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACO,WAAW,CAAC,CAAC;QACvEC,KAAK,CAACR,MAAM,CAACS,OAAO,CAAC;QACrB,IAAI,CAACvB,MAAM,CAACwB,aAAa,CAAC,WAAW,CAAC;MACxC,CAAC,EACAV,MAAM,IAAI;QACTQ,KAAK,CAACR,MAAM,CAACW,KAAK,CAACF,OAAO,CAAC;MAC7B,CAAC,CACF;;EAEL;CAoCD;AApFYzB,cAAc,eAL1BF,SAAS,CAAC;EACT8B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW9B,cAAc,CAoF1B;SApFYA,cAAc","names":["Component","Validators","LoginComponent","constructor","router","ds","fb","group","acno","required","pattern","pswd","ngOnInit","login","loginForm","value","valid","subscribe","result","localStorage","setItem","JSON","stringify","token","currentUser","currentAcno","alert","message","navigateByUrl","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/media/sahil/Partition_1/code/Angular/BANK/bankApp/src/app/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit { // 3rd executed\r\n// class is collection of properties and methods\r\n\r\n  constructor(private router:Router, private ds:DataService, private fb:FormBuilder){ // 1st executed\r\n    // used for object initialization\r\n    // It automatically invokes when an object is created.\r\n   } \r\n\r\n  ngOnInit(): void {// 2nd executed\r\n    // Initial process of a component\r\n    // when a component is created at same time it initialize or authorize\r\n    // when a component is created there is a lifecycle for it.\r\n  }\r\n  \r\n  // Properties\r\n\r\n  aim = 'Your perfect banking partner'; // string interpolation (component to view)\r\n  account = 'Enter your account number';  // Property binding - [attributes_name] = 'property'\r\n\r\n  // To hold the value from the user\r\n  acno:any;\r\n  pswd:any;\r\n\r\n  //model for login\r\n  loginForm = this.fb.group({\r\n    acno:['',[Validators.required,Validators.pattern('[0-9]*')]],\r\n    pswd:['',[Validators.required,Validators.pattern('[a-zA-Z0-9]*')]]\r\n  })\r\n\r\n  // Userdefined functions // 4th executed\r\n\r\n    login(){ \r\n    const acno = this.loginForm.value.acno;\r\n    const pswd = this.loginForm.value.pswd;\r\n    if(this.loginForm.valid){\r\n      this.ds.login(acno, pswd).subscribe(\r\n        (result:any) => {\r\n          localStorage.setItem('Token', JSON.stringify(result.token))\r\n          localStorage.setItem('currentUser', JSON.stringify(result.currentUser))\r\n          localStorage.setItem('currentAcno', JSON.stringify(result.currentAcno))\r\n          alert(result.message);\r\n          this.router.navigateByUrl('dashboard');\r\n        },\r\n        (result) => {\r\n          alert(result.error.message);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //Event binding - (event_name) = \"function_name\"   \r\n  // login(a:any, p:any){ \r\n  //   const acno = a.value;\r\n  //   const pswd = p.value;\r\n  //   let userDetails = this.userDetails;\r\n  //   if(acno in userDetails){\r\n  //     if(pswd == userDetails[acno].password){\r\n  //       alert('login successfull');\r\n  //     }else{\r\n  //       alert('Incorrect password');\r\n  //     }\r\n  //   }else{\r\n  //     alert('user not found');\r\n  //   }\r\n  // }\r\n\r\n  //Event binding using $event - (event_name) = function_name($event) \r\n  // acnoChange(event:any){\r\n  //   console.log(event.target.value);\r\n  //   this.acno = event.target.value;\r\n  //   console.log(this.acno);\r\n  // }     \r\n  // pswdChange(event:any){  \r\n  //   console.log(event.target.value);\r\n  //   this.pswd = event.target.value;\r\n  //   console.log(this.pswd);\r\n  // }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}